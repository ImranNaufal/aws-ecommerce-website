AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Amplify App for E-commerce Website with CI/CD Pipeline'

Parameters:
  ProjectName:
    Type: String
    Default: 'mini-ecommerce'
    Description: 'Name of the project'
  
  Environment:
    Type: String
    Default: 'dev'
    AllowedValues: ['dev', 'staging', 'prod']
    Description: 'Environment name'

  GitHubRepository:
    Type: String
    Description: 'GitHub repository URL (e.g., https://github.com/username/repo)'
    Default: 'https://github.com/your-username/aws-ecommerce-website'

  GitHubAccessToken:
    Type: String
    Description: 'GitHub personal access token for repository access'
    NoEcho: true

  DomainName:
    Type: String
    Description: 'Custom domain name (optional)'
    Default: ''

Resources:
  # IAM Role for Amplify
  AmplifyServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-${Environment}-amplify-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: amplify.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess-Amplify
      Policies:
        - PolicyName: AmplifyDeploymentPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                  - cloudformation:*
                  - lambda:*
                  - apigateway:*
                  - dynamodb:*
                  - iam:PassRole
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  # Amplify App
  AmplifyApp:
    Type: AWS::Amplify::App
    Properties:
      Name: !Sub '${ProjectName}-${Environment}'
      Description: 'Professional E-commerce Website with Full AWS Integration'
      Repository: !Ref GitHubRepository
      AccessToken: !Ref GitHubAccessToken
      IAMServiceRole: !GetAtt AmplifyServiceRole.Arn
      Platform: WEB
      BuildSpec: |
        version: 1
        applications:
          - frontend:
              phases:
                preBuild:
                  commands:
                    - echo "Starting frontend build process..."
                    - cd frontend
                    - npm ci
                    - echo "Frontend dependencies installed"
                build:
                  commands:
                    - echo "Building React application..."
                    - npm run build
                    - echo "Frontend build completed successfully"
                postBuild:
                  commands:
                    - echo "Running post-build optimizations..."
                    - echo "Build artifacts ready for deployment"
              artifacts:
                baseDirectory: frontend/build
                files:
                  - '**/*'
              cache:
                paths:
                  - frontend/node_modules/**/*
            appRoot: frontend
      CustomRules:
        - Source: '/<*>'
          Target: '/index.html'
          Status: '404-200'
        - Source: '</^[^.]+$|\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|ttf|map|json)$)([^.]+$)/>'
          Target: '/index.html'
          Status: '200'
      EnvironmentVariables:
        - Name: AMPLIFY_DIFF_DEPLOY
          Value: 'false'
        - Name: AMPLIFY_MONOREPO_APP_ROOT
          Value: 'frontend'
        - Name: _LIVE_UPDATES
          Value: '[{"name":"Amplify CLI","pkg":"@aws-amplify/cli","type":"npm","version":"latest"}]'
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # Main Branch
  AmplifyBranch:
    Type: AWS::Amplify::Branch
    Properties:
      AppId: !GetAtt AmplifyApp.AppId
      BranchName: 'main'
      Description: 'Main production branch'
      EnableAutoBuild: true
      EnablePerformanceMode: true
      EnablePullRequestPreview: false
      EnvironmentVariables:
        - Name: REACT_APP_API_ENDPOINT
          Value: !Sub 
            - 'https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com/${Environment}'
            - ApiId: !ImportValue 
                Fn::Sub: '${ProjectName}-${Environment}-api-id'
        - Name: REACT_APP_ENVIRONMENT
          Value: !Ref Environment
        - Name: REACT_APP_REGION
          Value: !Ref AWS::Region
      Tags:
        - Key: Branch
          Value: main
        - Key: Environment
          Value: !Ref Environment

  # Development Branch (optional)
  AmplifyDevBranch:
    Type: AWS::Amplify::Branch
    Condition: CreateDevBranch
    Properties:
      AppId: !GetAtt AmplifyApp.AppId
      BranchName: 'develop'
      Description: 'Development branch for testing'
      EnableAutoBuild: true
      EnablePerformanceMode: false
      EnablePullRequestPreview: true
      EnvironmentVariables:
        - Name: REACT_APP_API_ENDPOINT
          Value: !Sub 
            - 'https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com/dev'
            - ApiId: !ImportValue 
                Fn::Sub: '${ProjectName}-dev-api-id'
        - Name: REACT_APP_ENVIRONMENT
          Value: 'dev'
        - Name: REACT_APP_REGION
          Value: !Ref AWS::Region

  # Custom Domain (if provided)
  AmplifyDomain:
    Type: AWS::Amplify::Domain
    Condition: HasCustomDomain
    Properties:
      AppId: !GetAtt AmplifyApp.AppId
      DomainName: !Ref DomainName
      EnableAutoSubDomain: true
      SubDomainSettings:
        - Prefix: !Ref Environment
          BranchName: !GetAtt AmplifyBranch.BranchName
        - Prefix: 'www'
          BranchName: !GetAtt AmplifyBranch.BranchName

  # Webhook for manual deployments
  AmplifyWebhook:
    Type: AWS::Amplify::Branch
    Properties:
      AppId: !GetAtt AmplifyApp.AppId
      BranchName: 'webhook'
      Description: 'Webhook branch for manual deployments'
      EnableAutoBuild: false

Conditions:
  HasCustomDomain: !Not [!Equals [!Ref DomainName, '']]
  CreateDevBranch: !Equals [!Ref Environment, 'prod']

Outputs:
  AmplifyAppId:
    Description: 'Amplify App ID'
    Value: !GetAtt AmplifyApp.AppId
    Export:
      Name: !Sub '${ProjectName}-${Environment}-amplify-app-id'

  AmplifyAppArn:
    Description: 'Amplify App ARN'
    Value: !GetAtt AmplifyApp.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-amplify-app-arn'

  DefaultDomain:
    Description: 'Default Amplify domain'
    Value: !GetAtt AmplifyApp.DefaultDomain
    Export:
      Name: !Sub '${ProjectName}-${Environment}-amplify-domain'

  AppURL:
    Description: 'Amplify App URL'
    Value: !Sub 'https://${Environment}.${AmplifyApp.DefaultDomain}'

  CustomDomainURL:
    Description: 'Custom domain URL (if configured)'
    Condition: HasCustomDomain
    Value: !Sub 'https://${Environment}.${DomainName}'

  AmplifyConsoleURL:
    Description: 'Amplify Console URL'
    Value: !Sub 'https://console.aws.amazon.com/amplify/home?region=${AWS::Region}#/${AmplifyApp.AppId}'

  WebhookURL:
    Description: 'Webhook URL for manual deployments'
    Value: !Sub 'https://webhooks.amplify.${AWS::Region}.amazonaws.com/prod/webhooks?id=${AmplifyApp.AppId}&token=TOKEN&operation=startbuild'
